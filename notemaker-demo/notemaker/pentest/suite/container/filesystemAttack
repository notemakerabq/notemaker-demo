#!/bin/bash
  
wait_for_running() {
  echo   "   >> waiting for all $1 pods to be Running again"
  printf "   >> "
  while true; do
    printf "."
    sleep 5
    block=$(kubectl get pods -n notemaker | grep $1 | grep -v Running)
    [[ -z "$block" ]] && break 
  done
  echo; echo "-------------- ALL $1 PODS Running -------------------"
}

# launch payload and attack
cp attack_filesystem.sh remote.sh 
pod=$(kubectl get pods -n notemaker | grep mongodb | grep Running | head -1 | awk '{print $1}')
kubectl cp remote.sh notemaker/$pod:/tmp/
kubectl exec -it -n notemaker $pod -- sh -c "/tmp/remote.sh"

# wait to see if container is brought down
sleep 3

block=$(kubectl get pods -n notemaker | grep mongo | grep -v Running)
if [[ ! -z "$block" ]]; then
   kubectl get pods -n notemaker | grep mongo | tr -s "   " 
   echo "------------- FILE SYSTEM ATTACK FAILED ------------------"
   wait_for_running mongo
fi

