#!/bin/bash
  
wait_for_running() {
  echo   "   >> waiting for all $1 pods to be Running again"
  printf "   >> "
  while true; do
    printf "."
    sleep 5
    block=$(kubectl get pods -n notemaker | grep $1 | grep -v Running)
    [[ -z "$block" ]] && break
  done
  echo; echo "   >> all $1 PODS Running"; echo
}

echo
echo   "------------ DNS NETWORK OUTBOUND ATTACK ----------------" 
 
# find the first web-service pod that is Running
pod=$(kubectl get pods -n notemaker | grep web | grep Running | head -1 | awk '{print $1}')

echo   ">>> deploying attack payload into $pod "
kubectl cp attack_via_dns.sh notemaker/$pod:/tmp/remote.sh

echo ">>> executing payload remote.sh in /tmp folder"
kubectl exec -it -n notemaker $pod -- sh -c "/tmp/remote.sh"

sleep 2

block=$(kubectl get pods -n notemaker | grep web | grep -v Running)
if [[ ! -z "$block" ]]; then
   kubectl get pods -n notemaker | grep web | tr -s "   "
   echo "------------ DNS OUTBOUND ATTACK FAILED -----------------"
   wait_for_running web 
fi





